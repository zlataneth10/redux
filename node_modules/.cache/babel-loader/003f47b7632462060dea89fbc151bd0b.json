{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nexport const tasksSlice = createSlice({\n  name: \"tasks\",\n  initialState: [],\n  reducers: {\n    addTask: (state, action) => {\n      const newTask = {\n        id: new Date(),\n        name: action.payload.task\n      };\n      state.push(newTask);\n    },\n    deleteTask: (state, action) => {\n      return state.filter(item => item.id !== action.payload.id);\n    }\n  }\n});\nexport const {\n  addTask,\n  deleteTask\n} = tasksSlice.actions;\nexport default tasksSlice.reducer;","map":{"version":3,"names":["createSlice","tasksSlice","name","initialState","reducers","addTask","state","action","newTask","id","Date","payload","task","push","deleteTask","filter","item","actions","reducer"],"sources":["C:/Users/zlata/Desktop/redux-checkpoint-main/src/redux/tasksSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const tasksSlice = createSlice({\n    name: \"tasks\",\n    initialState:[],\n    reducers:{\n        addTask: (state, action)=>{\n            const newTask = {\n                id: new Date(),\n                name: action.payload.task\n            }\n            state.push(newTask);\n        },\n        deleteTask: (state, action)=>{\n            return state.filter((item) => item.id !== action.payload.id);\n        }\n    }\n});\n\nexport const {addTask, deleteTask} = tasksSlice.actions;\n\nexport default tasksSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,OAAO,MAAMC,UAAU,GAAGD,WAAW,CAAC;EAClCE,IAAI,EAAE,OAAO;EACbC,YAAY,EAAC,EAAE;EACfC,QAAQ,EAAC;IACLC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAG;MACtB,MAAMC,OAAO,GAAG;QACZC,EAAE,EAAE,IAAIC,IAAI,CAAC,CAAC;QACdR,IAAI,EAAEK,MAAM,CAACI,OAAO,CAACC;MACzB,CAAC;MACDN,KAAK,CAACO,IAAI,CAACL,OAAO,CAAC;IACvB,CAAC;IACDM,UAAU,EAAEA,CAACR,KAAK,EAAEC,MAAM,KAAG;MACzB,OAAOD,KAAK,CAACS,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACP,EAAE,KAAKF,MAAM,CAACI,OAAO,CAACF,EAAE,CAAC;IAChE;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAACJ,OAAO;EAAES;AAAU,CAAC,GAAGb,UAAU,CAACgB,OAAO;AAEvD,eAAehB,UAAU,CAACiB,OAAO"},"metadata":{},"sourceType":"module"}